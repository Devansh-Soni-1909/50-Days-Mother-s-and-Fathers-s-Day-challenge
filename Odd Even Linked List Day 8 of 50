/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {

        if(!head || !head->next) return head;
        

        ListNode* dummyNode1 = new ListNode(-1);
        ListNode* dummyNode2 = new ListNode(-2);
        ListNode* t1 = dummyNode1;
        ListNode* t2 = dummyNode2;
        ListNode* temp = head;
        int cnt = 1;
        while(temp){
            if(cnt%2!=0 ){
                t1->next = temp;
                t1 = temp ;
                temp = temp->next;
            }
            else{
                

                t2->next = temp;
                t2 = temp ;
                temp = temp->next;
                

            }
            cnt++;

        }
       if(t2->next = t1){
        t2->next = NULL;
        t1->next = dummyNode2->next;
        dummyNode2->next = NULL;


       }
       else{
        t1->next = NULL;
        t1->next = dummyNode2->next;
        dummyNode2->next = NULL;

       }
       return dummyNode1->next;

    }
};
