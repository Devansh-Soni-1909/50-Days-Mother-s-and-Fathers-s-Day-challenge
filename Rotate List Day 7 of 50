/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {

        if(!head || !head->next || k==0) return head;

        int len = 0;
        ListNode* temp = head;
        while(temp){
            len++;
            temp = temp->next;
        }
        k = k%len;
        if(k==0) return head;
        temp = head;
        int iterLimit = len-k;
        iterLimit--;

        while(iterLimit && temp){
            iterLimit--;
            temp = temp->next;
        }
        ListNode* nextnode = temp->next;
        temp->next = NULL;
        ListNode* t = nextnode;
        while(t->next){
            t = t->next;
        }
        t->next = head;
        return nextnode;

        
    }
};
