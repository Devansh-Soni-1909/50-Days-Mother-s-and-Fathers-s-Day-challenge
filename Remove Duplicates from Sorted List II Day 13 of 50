/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {

        if(!head || !head->next) return head;
        ListNode* dummyNode = new ListNode(-1);
        ListNode* t = dummyNode;
        ListNode* temp = head;
        ListNode* prev = NULL;
        while(temp && temp->next){
            if(((!prev) && (temp->val !=temp->next->val)) || ((prev && prev->val != temp->val) && (temp->val!=temp->next->val))){
                t->next = temp;
                t = temp;
            }
            prev = temp;
            temp = temp->next;
        }
        if(prev -> val != temp->val){
            t->next = temp;
            t = temp;
        
            
        }
        t->next = NULL;
        return dummyNode->next;
        
    }
};
