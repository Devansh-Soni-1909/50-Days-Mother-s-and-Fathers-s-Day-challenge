/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {

        if(!head || !head->next) return NULL;


        int  len = 0;
        ListNode* temp = head;
        while(temp){
            len++;
            temp = temp->next;
        }
        int nodeToRemove = len - n;
        if(nodeToRemove == 0) return head->next;
        temp = head;
        int cnt = 0;
        while(temp){
            cnt++;
            if(cnt == nodeToRemove){
                ListNode* nextnode = temp->next;
                temp->next = nextnode->next;
                nextnode->next = NULL;
            }
            temp = temp->next;

        }

        return head;

        
    }
};
